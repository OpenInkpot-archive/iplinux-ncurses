#!/usr/bin/make -f
# This file has gone through many maintainers.  Mostly rewritten
# by Daniel Jacobowitz.

include /usr/share/dpatch/dpatch.make

# This has to be exported to make some magic below work.
export DH_OPTIONS

# These are important since this is a library package
soname=5
vername=5.7
sodepver = (>= 5.6+20071006-3)

# Name our packages
package-base=ncurses-base
package-bin=ncurses-bin
package-lib=libncurses$(soname)
package-libw=libncursesw$(soname)
package-dev=libncurses$(soname)-dev
package-devw=libncursesw$(soname)-dev
package-dbg=libncurses$(soname)-dbg
package-dbgw=libncursesw$(soname)-dbg
package-term=ncurses-term

workdir=$(shell pwd)
tempdir=debian/tmp
fulltempdir=$(workdir)/$(tempdir)

srcdir=$(shell pwd)
objdir=$(srcdir)/obj
wobjdir=$(srcdir)/obj-wide
objdir-debug=$(srcdir)/obj-debug
wobjdir-debug=$(srcdir)/obj-wide-debug
host-objdir=$(srcdir)/host-obj

DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_HOST_GNU_SYSTEM ?= $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM)
DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)

# misc/Makefile does not expect several directories in PKG_CONFIG_LIBDIR
PKG_CONFIG_LIBDIR=$(shell echo $PKG_CONFIG_LIBDIR | cut -d: -f1)

CFLAGS = -O2 -g
CONFARGS =	--prefix=/usr \
		--with-shared \
		--mandir='$${datadir}/man' \
		--without-profile --without-debug \
		--disable-rpath --enable-echo \
		--enable-const \
		--without-ada \
		--enable-symlinks \
		--disable-lp64 \
		--with-chtype='long' \
		--with-mmask-t='long' \
		--disable-termcap \
		--with-default-terminfo-dir=/etc/terminfo \
		--with-terminfo-dirs="/etc/terminfo:/lib/terminfo:/usr/share/terminfo" \
		--with-ticlib

ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
CROSS_CONFARGS = --with-build-cc=gcc --host=$(DEB_HOST_GNU_TYPE)
endif

# Files for /lib/terminfo.  Until the compatibility symlinks are removed
# from /usr/share/terminfo, be sure to update ncurses-base.files if you
# change this.
libterminfofiles=a/ansi c/cons25 c/cygwin d/dumb h/hurd l/linux m/mach \
	m/mach-bold m/mach-color p/pcansi r/rxvt r/rxvt-m r/rxvt-basic \
	r/rxvt-unicode \
	s/screen s/screen-bce s/screen-s s/screen-w s/sun v/vt100 v/vt102 \
	v/vt220 v/vt52 x/xterm x/xterm-debian x/xterm-xfree86 x/xterm-color \
	x/xterm-mono x/xterm-r5 x/xterm-r6 x/xterm-vt220 \
	x/xterm-256color s/screen-256color s/screen-256color-bce \
	w/wsvt25 w/wsvt25m E/Eterm E/Eterm-color

# Blacklist terminfo entries shipped by other Debian packages so that we do
# not begin shipping them by accident.
badterminfo = 5/5250 b/bterm i/iterm i/iterm-am i/iterm-color \
	j/jfbterm k/kon l/linux-5250 m/mlterm

$(objdir)/config.status: patch
	test -d $(objdir) || mkdir $(objdir)
	cd $(objdir) && CFLAGS="$(CFLAGS)" $(srcdir)/configure \
		$(CONFARGS) \
		$(CROSS_CONFARGS) \
		--with-install-prefix=$(fulltempdir) \
		--enable-overwrite

$(objdir-debug)/config.status: patch
	test -d $(objdir-debug) || mkdir $(objdir-debug)
	cd $(objdir-debug) && \
		CFLAGS="$(CFLAGS) -DTRACE" $(srcdir)/configure \
		$(CONFARGS) \
		$(CROSS_CONFARGS) \
		--with-install-prefix=$(fulltempdir) \
		--enable-overwrite

$(wobjdir)/config.status: patch
	test -d $(wobjdir) || mkdir $(wobjdir)
	cd $(wobjdir) && CFLAGS="$(CFLAGS)" $(srcdir)/configure \
		$(CONFARGS) \
		$(CROSS_CONFARGS) \
		--with-install-prefix=$(fulltempdir) \
		--disable-overwrite --enable-widec

$(wobjdir-debug)/config.status: patch
	test -d $(wobjdir-debug) || mkdir $(wobjdir-debug)
	cd $(wobjdir-debug) && \
		CFLAGS="$(CFLAGS) -DTRACE" $(srcdir)/configure \
		$(CONFARGS) \
		$(CROSS_CONFARGS) \
		--with-install-prefix=$(fulltempdir) \
		--disable-overwrite --enable-widec

$(host-objdir)/config.status: patch
	test -d $(host-objdir) || mkdir $(host-objdir)
	cd $(host-objdir) && CFLAGS="$(CFLAGS)" $(srcdir)/configure \
		$(CONFARGS) \
		--with-install-prefix=$(fulltempdir) \
		--enable-overwrite

build: build-normal build-wide build-debug build-wide-debug build-host
	touch $@

build-normal: $(objdir)/config.status
	cd $(objdir) && $(MAKE)
	touch $@

build-debug: $(objdir-debug)/config.status
	cd $(objdir-debug) && $(MAKE)
	touch $@

build-wide: $(wobjdir)/config.status
	cd $(wobjdir) && $(MAKE)
	touch $@

build-wide-debug: $(wobjdir-debug)/config.status
	cd $(wobjdir-debug) && $(MAKE)
	touch $@

build-host: $(host-objdir)/config.status
	cd $(host-objdir) && $(MAKE)
	touch $@

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build
	rm -rf $(objdir)
	rm -rf $(wobjdir)
	rm -rf $(objdir-debug)
	rm -rf $(wobjdir-debug)
	rm -rf $(host-objdir)
	rm -f build-normal build-wide build-debug build-wide-debug build-host
	rm -f debian/shlibs.local
	dh_clean

install: DH_OPTIONS=
install: build
	# Generate proper debhelper files for so-named packages
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs -s
	dh_installdirs -i

	mkdir -p $(tempdir)/etc

	# Install into our base directory
	GZIP='-9' $(MAKE) -C $(objdir-debug) install
	$(MAKE) -C $(wobjdir-debug) install.libs

	# Copy libraries to the debug directory
	test -d $(tempdir)/usr/lib/debug || mkdir $(tempdir)/usr/lib/debug
	cp -a $(tempdir)/usr/lib/*.so.* $(tempdir)/usr/lib/debug

	# Rename static debug libraries.
	for lib in $(tempdir)/usr/lib/*.a; do \
	  mv $$lib `echo $$lib | sed 's/\.a$$/_g.a/'`; \
	done

	# Install non -DTRACE versions.
	$(MAKE) -C $(objdir) install.libs
	$(MAKE) -C $(wobjdir) install.libs

	# Move terminfo files to the right place.
	mv $(tempdir)/etc/terminfo $(tempdir)/usr/share/terminfo

	# Remove blacklisted terminal types.
	cd $(tempdir)/usr/share/terminfo && rm -f $(badterminfo)

	# Compile Debian-specific terminfo entries before moving files
	# into their packages.  Hurd uses gsbom/grbom, so pass -x to tic.
ifeq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
	for ti in xterm hurd rxvt rxvt-unicode screen; do \
	  LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:$(fulltempdir)/usr/lib:$(fulltempdir)/lib \
		TERMINFO=$(fulltempdir)/usr/share/terminfo \
		$(tempdir)/usr/bin/tic -x debian/$$ti.ti; \
	done
else
	for ti in xterm hurd rxvt rxvt-unicode screen; do \
		LD_LIBRARY_PATH=$(host-objdir)/lib \
		TERMINFO=$(fulltempdir)/usr/share/terminfo \
		$(host-objdir)/progs/tic -x debian/$$ti.ti; \
	done
endif

	# We keep the libncurses shared library in /lib.
	test -d $(tempdir)/lib || mkdir $(tempdir)/lib
	mv $(tempdir)/usr/lib/libncurses.so.$(vername) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libncurses.so.$(soname) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libtic.so.$(vername) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libtic.so.$(soname) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libncursesw.so.$(vername) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libncursesw.so.$(soname) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libticw.so.$(vername) $(tempdir)/lib/
	mv $(tempdir)/usr/lib/libticw.so.$(soname) $(tempdir)/lib/

	# Move ncurses-base terminfo entries to /lib/terminfo.
	for f in $(libterminfofiles); do \
		dir=$(tempdir)/lib/terminfo/$$(dirname $$f); \
		mkdir -p $$dir; \
		mv $(tempdir)/usr/share/terminfo/$$f $$dir; \
	done

	# Create an empty /etc/terminfo for the sysadmin.
	mkdir -p $(tempdir)/etc/terminfo

	dh_movefiles -s
	dh_movefiles -i

	# We keep the libncurses shared library in /lib.
	ln -sf /lib/libncurses.so.$(soname) debian/$(package-dev)/usr/lib/libncurses.so
	ln -sf /lib/libncursesw.so.$(soname) debian/$(package-devw)/usr/lib/libncursesw.so
	ln -sf /lib/libtic.so.$(soname) debian/$(package-dev)/usr/lib/libtic.so
	ln -sf /lib/libticw.so.$(soname) debian/$(package-devw)/usr/lib/libticw.so

	# By tradition, we provide -lcurses and -ltermcap.
	ln -sf libncurses.so debian/$(package-dev)/usr/lib/libcurses.so
	ln -sf libncurses.so debian/$(package-dev)/usr/lib/libtermcap.so
	ln -sf libncurses.a debian/$(package-dev)/usr/lib/libtermcap.a
	ln -sf libncurses.a debian/$(package-dev)/usr/lib/libcurses.a

binary:	binary-arch binary-indep

binary-arch: build install
	dh_testdir
	dh_testroot

	dh_strip -s -X$(package-dbg) -X$(package-dbgw)
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -p$(package-lib) -V "$(package-lib) $(sodepver)"
	dh_makeshlibs -p$(package-libw) -V "$(package-libw) $(sodepver)"
	dh_shlibdeps -p$(package-lib) -p$(package-libw) \
		-ldebian/$(package-lib)/lib:debian/$(package-lib)/usr/lib:debian/$(package-libw)/usr/lib \
		-- -L$(shell pwd)/debian/shlibs.dummy

	# We don't ship any binaries linked against the 64-bit libraries, so
	# don't add them to shlibs.  They have the same sonames, so they
	# override the 32-bit versions, messing up the dependencies from
	# ncurses-bin.
	cat debian/$(package-lib)/DEBIAN/shlibs \
	  debian/$(package-libw)/DEBIAN/shlibs > debian/shlibs.local

	dh_shlibdeps -s -N$(package-lib) -N$(package-libw) \
		-ldebian/$(package-lib)/lib:debian/$(package-lib)/usr/lib:debian/$(package-libw)/usr/lib

	dh_gencontrol -s
	dh_installdeb -s
	dh_builddeb -s

binary-indep: DH_OPTIONS=-i
binary-indep: build install
	dh_testdir
	dh_testroot

	dh_compress -i
	dh_fixperms -i
	dh_gencontrol -i
	dh_installdeb -i
	dh_builddeb -i

.PHONY: binary diff clean patch install
